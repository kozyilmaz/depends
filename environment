#!/bin/sh

# usage: source environment [optional: ios-arm64, ios-sim, android-aarch64]
ARG=$1

if [[ -z "$ARG" ]]; then
    echo "setting compiler for desktop platforms";
elif [ "ios-arm64" == "$ARG" ]; then
    echo "setting compiler for Apple iOS (only 64bit)";
elif [ "ios-sim" == "$ARG" ]; then
    echo "setting compiler for Apple iOS Simulator";
elif [ "android-aarch64" == "$ARG" ]; then
    echo "setting compiler for Android arm64-v8a";
else
    echo "no suitable platform found!"
    return 1
fi

ANDROIDREGEX="^(android)"
# check Android env vars
if [[ "$ARG" =~ $ANDROIDREGEX ]]; then
    echo "checking env vars for Android";
    if [[ -z "$ANDROID_NDK" ]]; then
        echo "ANDROID_NDK not defined!";
        return 1
    fi
    if [[ -z "$ANDROID_HOST_TAG" ]]; then
        echo "ANDROID_HOST_TAG not defined!";
        return 1
    fi
    # sample ANDROID definitions and paths for macOS
    # export ANDROID_NDK=/usr/local/android-ndk-r19c
    # export ANDROID_HOST_TAG=darwin-x86_64
    echo "using ANDROID_NDK=$ANDROID_NDK";
    echo "using ANDROID_HOST_TAG=$ANDROID_HOST_TAG";
    export PATH=${ANDROID_NDK}/toolchains/llvm/prebuilt/${ANDROID_HOST_TAG}/bin:${PATH};
    echo "using PATH=${PATH}";
fi

# common
BSPJOB=4
BSPROOT=$(cd $(dirname "${BASH_SOURCE[0]}") >/dev/null && pwd)

# platform
if [[ -z "$ARG" ]]; then
    BSPCC=gcc
    BSPCXX=g++
    BSPHOST=
    BSPPREFIX=
    BSPCFLAGS=
    BSPLDFLAGS=
    BSPPLATFORM=x86_64
elif [ "ios-arm64" == "$ARG" ]; then
    BSPCC=$(xcrun --sdk iphoneos -f clang)
    BSPCXX=$(xcrun --sdk iphoneos -f clang++)
    BSPHOST="--host=aarch64-apple-darwin"
    BSPPREFIX=
    BSPCFLAGS="-arch arm64 -miphoneos-version-min=12.1 -isysroot $(xcrun --sdk iphoneos --show-sdk-path) -fno-common"
    BSPLDFLAGS=
    BSPPLATFORM=ios-arm64
elif [ "ios-sim" == "$ARG" ]; then
    BSPCC=$(xcrun --sdk iphonesimulator -f clang)
    BSPCXX=$(xcrun --sdk iphonesimulator -f clang++)
    BSPHOST="--host=x86_64-apple-darwin"
    BSPPREFIX=
    BSPCFLAGS="-arch x86_64 -miphonesimulator-version-min=12.1 -isysroot $(xcrun --sdk iphonesimulator --show-sdk-path)"
    BSPLDFLAGS=
    BSPPLATFORM=ios-sim
elif [ "android-aarch64" == "$ARG" ]; then
    BSPCC=aarch64-linux-android21-clang
    BSPCXX=aarch64-linux-android21-clang++
    BSPHOST="--host aarch64-linux-android"
    BSPPREFIX=aarch64-linux-android
    BSPCFLAGS=
    BSPLDFLAGS=
    BSPPLATFORM=android-aarch64
fi

# debugging & profiling
BSPEXTRAFLAGS=

# tools and output
BSPTOOLS=${BSPROOT}/tools/o
BSPROOTFS=${BSPROOT}/build/${BSPPLATFORM}
PATH=${BSPTOOLS}/bin:${PATH}

export BSPJOB BSPROOT BSPCC BSPCXX BSPHOST BSPPREFIX BSPCFLAGS BSPLDFLAGS BSPPLATFORM BSPEXTRAFLAGS BSPTOOLS BSPROOTFS PATH

# tools selection
export TOOLS_ENABLE_CMAKE=y

# depends selection
export DEPENDS_ENABLE_OPENSSL=y
export DEPENDS_ENABLE_CURL=n
export DEPENDS_ENABLE_LIBEVENT=y
export DEPENDS_ENABLE_LIBEVHTP=n
export DEPENDS_ENABLE_UNIVALUE=y
export DEPENDS_ENABLE_BITCOIN=y
